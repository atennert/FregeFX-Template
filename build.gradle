// build script to handle frege compilation
buildscript { // this should become a dependency of the frege-gradle-plugin in version 0.8
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'commons-io:commons-io:2.4' // for fregeDoc
    }
}

plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'org.frege-lang' version '0.8' // version required
}

group 'de.atennert.fregefx'
version '0.0.1'

mainClassName = 'de.atennert.fregefx.Hello'

ext {
    javaTarget = 1.8
    fregeRelease = '3.24public'
    fregeVersion = '3.24.400'
}

sourceCompatibility = javaTarget
targetCompatibility = javaTarget

// download Frege lib for reasons to include it locally
ant.mkdir(dir: "${rootProject.projectDir}/lib/org/frege-lang/frege/${fregeVersion}")
ant.get(src: "https://github.com/Frege/frege/releases/download/${fregeRelease}/frege${fregeVersion}.jar",
        dest: "${rootProject.projectDir}/lib/org/frege-lang/frege//${fregeVersion}/frege-${fregeVersion}.jar",
        skipexisting: 'true')

repositories {
    mavenLocal()
    jcenter()
    maven { // include Frege lib locally
        url = "${rootProject.projectDir}/lib"
    }
}

sourceSets {
    main {
        java {
            // src/frege/java will contain the java files generated from Frege
            // by adding it to the srcDirs, we get IDE support for accessing
            // the Frege content from Java.
            srcDirs = ['src/main/java', 'src/frege/java']
        }
    }
    // Add a special source set for Frege and set the output directory for the
    // Frege compiler to src/frege/java. It's using the Java output dir, so we
    // need to change that one for this source set *rolling eyes*
    frege {
        java {
            outputDir = file("src/frege/java")
        }
    }
}

dependencies {
    fregeCompile 'org.frege-lang:frege:3+'
    fregeCompile 'org.frege-lang:fregefx:0.8'

    compile 'org.frege-lang:frege:3+'
    compile 'org.frege-lang:fregefx:0.8'
    // we want to call Frege from Java, so it needs to be compiled to Java first
    compileOnly sourceSets.frege.output

    testCompile 'junit:junit:4+'
    testCompile 'org.mockito:mockito-all:1+'
    // Just in case we have an implicit reference from Java to Frege during the tests
    testCompile sourceSets.frege.output
}

compileFrege {
    target = javaTarget
    compileGeneratedJava = false // i'd like to NOT have class files generated by Frege, but it doesn't work :-\
}
compileTestFrege {
    target = javaTarget
}

fregeDoc {
    verbose = true
    module = 'src/frege/java'
}

fregeQuickCheck {
    moduleDir = "$project.buildDir/classes/java/test"
    classpathDirectories = ["$project.buildDir/classes/java/main", "$project.buildDir/classes/java/test"]
}

// handle jar packaging
jar {
    // bundle required libraries into generated jar
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    // declare class containing main method for runnable jar
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
